{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Documents/15-clicky-game/react-game/clicky-game/src/components/container/index.js\";\n\n/* eslint-disable eqeqeq */\n\n/* eslint-disable no-unused-vars */\n// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport Wrapper from '../body/wrapper';\nimport Nav from '../navbar';\nimport Host from '../body/playHost';\nimport Play from '../body/playWindow';\nimport Images from '../../images.json';\n\nclass Container extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      score: 0,\n      topScore: 0,\n      status: \"Click An Image To Begin!\",\n      picsRandom: [],\n      clicked: []\n    };\n\n    this.randomizeImages = () => {\n      var currentIndex = Images.length,\n          temporaryValue,\n          randomIndex;\n\n      while (0 !== currentIndex) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        temporaryValue = Images[currentIndex];\n        Images[currentIndex] = Images[randomIndex];\n        Images[randomIndex] = temporaryValue;\n      }\n\n      this.setState({\n        picsRandom: Images\n      }, () => {\n        console.log(this.state.picsRandom);\n      });\n    };\n\n    this.scoreIncrement = event => {\n      const _event$target = event.target,\n            id = _event$target.id,\n            name = _event$target.name;\n      console.log(name);\n      console.log(id);\n      this.setState({\n        [name]: this.state.clicked.concat([id])\n      }, this.scoreChecker);\n    };\n\n    this.scoreChecker = () => {\n      console.log(this.state.clicked);\n      const check = this.state.clicked;\n\n      if (this.scorChecker2(check)) {\n        this.setState({\n          score: 0,\n          clicked: [],\n          status: \"Incorrect Guess! You Lose!\"\n        });\n      } else {\n        this.setState({\n          score: this.state.score + 1,\n          topScore: this.state.topScore + 1,\n          status: \"Correct Guess!\"\n        });\n        this.randomizeImages();\n      }\n    };\n\n    this.scorChecker2 = check => {\n      var counts = [];\n\n      for (var i = 0; i <= check.length; i++) {\n        if (counts[check[i]] === undefined) {\n          counts[check[i]] = 1;\n        } else {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  componentDidMount() {\n    this.randomizeImages();\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      score: this.state.score,\n      topScore: this.state.topScore,\n      status: this.state.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Host, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.picsRandom.map(pic => {\n      return React.createElement(Play, {\n        key: pic.id,\n        id: pic.id,\n        src: pic.image,\n        name: \"clicked\",\n        onClick: this.scoreIncrement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default Container;","map":{"version":3,"sources":["/Users/jake/Documents/15-clicky-game/react-game/clicky-game/src/components/container/index.js"],"names":["React","Wrapper","Nav","Host","Play","Images","Container","Component","state","score","topScore","status","picsRandom","clicked","randomizeImages","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","setState","console","log","scoreIncrement","event","target","id","name","concat","scoreChecker","check","scorChecker2","counts","i","undefined","componentDidMount","render","map","pic","image"],"mappings":"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","sourcesContent":["/* eslint-disable eqeqeq */\n/* eslint-disable no-unused-vars */\n// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport Wrapper from '../body/wrapper';\nimport Nav from '../navbar';\nimport Host from '../body/playHost';\nimport Play from '../body/playWindow';\nimport Images from '../../images.json';\n\nclass Container extends React.Component {\n    state = {\n        score: 0,\n        topScore: 0,\n        status: \"Click An Image To Begin!\",\n        picsRandom: [],\n        clicked: [],\n    };\n\ncomponentDidMount() {\n    this.randomizeImages();\n}\n\nrandomizeImages = () => {\n\n    var currentIndex = Images.length, temporaryValue, randomIndex;\n\n    while (0 !== currentIndex) {\n\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        temporaryValue = Images[currentIndex];\n        Images[currentIndex] = Images[randomIndex];\n        Images[randomIndex] = temporaryValue;\n    }\n\n    this.setState({ picsRandom: Images }, () => {\n        console.log(this.state.picsRandom);\n    });\n    \n}\n\nscoreIncrement = event => {\n    const {id, name} = event.target;\n\n    console.log(name);\n    console.log(id);\n    \n    this.setState({ [name]: this.state.clicked.concat([id]) }, this.scoreChecker);\n    \n}\n\nscoreChecker = () => {\n    console.log(this.state.clicked);\n    const check = this.state.clicked;\nif(this.scorChecker2(check)) {\n    this.setState({ \n        score: 0,\n        clicked: [],\n        status: \"Incorrect Guess! You Lose!\",\n        });\n    } else {\n        this.setState({ \n            score: this.state.score + 1,\n            topScore: this.state.topScore + 1,\n            status: \"Correct Guess!\"\n            });\n        this.randomizeImages();\n    }\n}\n\nscorChecker2 = check => {\n    var counts = [];\n    for(var i = 0; i <= check.length; i++) {\n        if(counts[check[i]] === undefined) {\n            counts[check[i]] = 1;\n        } else {\n            return true;\n        }\n    }\n    return false;\n}\n\n    render() {\n        return (\n            <Wrapper>\n                <Nav \n                score={this.state.score}\n                topScore={this.state.topScore}\n                status={this.state.status}\n                />\n                <Host>\n                    {this.state.picsRandom.map(pic => {\n                    return (\n                      <Play \n                      key={pic.id}\n                      id={pic.id}\n                      src={pic.image}\n                      name=\"clicked\"\n                      onClick={this.scoreIncrement}\n                      />  \n                    );   \n                    })}\n                </Host>\n            </Wrapper>\n        );\n    }\n}\n\nexport default Container;"]},"metadata":{},"sourceType":"module"}