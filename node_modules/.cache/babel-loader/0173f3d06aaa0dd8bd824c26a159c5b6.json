{"ast":null,"code":"var _jsxFileName = \"/Users/jake/Documents/15-clicky-game/react-game/clicky-game/src/components/container/index.js\";\n\n/* eslint-disable eqeqeq */\n\n/* eslint-disable no-unused-vars */\n// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport Wrapper from '../body/wrapper';\nimport Nav from '../navbar';\nimport Host from '../body/playHost';\nimport Play from '../body/playWindow';\nimport Images from '../../images.json';\n\nclass Container extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      score: 0,\n      topScore: 0,\n      status: \"Click An Image To Begin!\",\n      picsRandom: [],\n      clicked: [],\n      bool: true\n    };\n\n    this.randomizeImages = () => {\n      var currentIndex = Images.length,\n          temporaryValue,\n          randomIndex;\n\n      while (0 !== currentIndex) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        temporaryValue = Images[currentIndex];\n        Images[currentIndex] = Images[randomIndex];\n        Images[randomIndex] = temporaryValue;\n      }\n\n      this.setState({\n        picsRandom: Images\n      }, () => {\n        console.log(this.state.picsRandom);\n      });\n    };\n\n    this.scoreIncrement = event => {\n      const _event$target = event.target,\n            id = _event$target.id,\n            value = _event$target.value;\n      console.log(value);\n      this.setState({\n        clicked: this.state.clicked.concat([id])\n      }, this.scoreChecker());\n    };\n\n    this.scoreChecker = () => {\n      console.log(this.state.clicked);\n      const check = this.state.clicked;\n\n      for (var i = 0; i <= check.length; i++) {\n        for (var j = i; j <= check.length; j++) {\n          if (i != j && check[i] == check[j]) {\n            this.setState({\n              score: 0,\n              status: \"Incorrect Guess! You Lose!\",\n              bool: false\n            });\n          }\n        }\n      }\n\n      if (this.state.bool) {\n        this.setState({\n          score: this.state.score + 1,\n          topScore: this.state.topScore + 1,\n          status: \"Correct Guess!\"\n        });\n        this.randomizeImages();\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.randomizeImages();\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      score: this.state.score,\n      topScore: this.state.topScore,\n      status: this.state.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Host, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.picsRandom.map(pic => {\n      return React.createElement(Play, {\n        key: pic.id,\n        id: pic.id,\n        src: pic.image,\n        value: pic.click,\n        onClick: this.scoreIncrement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default Container;","map":{"version":3,"sources":["/Users/jake/Documents/15-clicky-game/react-game/clicky-game/src/components/container/index.js"],"names":["React","Wrapper","Nav","Host","Play","Images","Container","Component","state","score","topScore","status","picsRandom","clicked","bool","randomizeImages","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","setState","console","log","scoreIncrement","event","target","id","value","concat","scoreChecker","check","i","j","componentDidMount","render","map","pic","image","click"],"mappings":"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","sourcesContent":["/* eslint-disable eqeqeq */\n/* eslint-disable no-unused-vars */\n// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport Wrapper from '../body/wrapper';\nimport Nav from '../navbar';\nimport Host from '../body/playHost';\nimport Play from '../body/playWindow';\nimport Images from '../../images.json';\n\nclass Container extends React.Component {\n    state = {\n        score: 0,\n        topScore: 0,\n        status: \"Click An Image To Begin!\",\n        picsRandom: [],\n        clicked: [],\n        bool: true\n    };\n\ncomponentDidMount() {\n    this.randomizeImages();\n}\n\nrandomizeImages = () => {\n\n    var currentIndex = Images.length, temporaryValue, randomIndex;\n\n    while (0 !== currentIndex) {\n\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        temporaryValue = Images[currentIndex];\n        Images[currentIndex] = Images[randomIndex];\n        Images[randomIndex] = temporaryValue;\n    }\n\n    this.setState({ picsRandom: Images }, () => {\n        console.log(this.state.picsRandom);\n    });\n    \n}\n\nscoreIncrement = event => {\n    const {id, value} = event.target;\n\n    console.log(value);\n    \n    this.setState({ clicked: this.state.clicked.concat([id]) }, this.scoreChecker());\n    \n}\n\nscoreChecker = () => {\n    console.log(this.state.clicked);\n    const check = this.state.clicked;\n\n    for(var i = 0; i <= check.length; i++) {\n        for(var j = i; j <= check.length; j++) {\n            if(i != j && check[i] == check[j]) {\n                this.setState({ \n                    score: 0,\n                    status: \"Incorrect Guess! You Lose!\",\n                    bool: false\n                    });\n            }\n        }\n    }\n            if (this.state.bool) {    \n                this.setState({ \n                    score: this.state.score + 1,\n                    topScore: this.state.topScore + 1,\n                    status: \"Correct Guess!\"\n                    });\n                this.randomizeImages();\n            }\n}\n\n    render() {\n        return (\n            <Wrapper>\n                <Nav \n                score={this.state.score}\n                topScore={this.state.topScore}\n                status={this.state.status}\n                />\n                <Host>\n                    {this.state.picsRandom.map(pic => {\n                    return (\n                      <Play \n                      key={pic.id}\n                      id={pic.id}\n                      src={pic.image}\n                      value={pic.click}\n                      onClick={this.scoreIncrement}\n                      />  \n                    );   \n                    })}\n                </Host>\n            </Wrapper>\n        );\n    }\n}\n\nexport default Container;"]},"metadata":{},"sourceType":"module"}